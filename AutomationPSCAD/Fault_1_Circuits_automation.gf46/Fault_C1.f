!=======================================================================
! Generated by  : PSCAD v4.6.2.0
!
! Warning:  The content of this file is automatically generated.
!           Do not modify, as any changes made here will be lost!
!-----------------------------------------------------------------------
! Component     : Fault_C1
! Description   : 
!-----------------------------------------------------------------------


!=======================================================================

      SUBROUTINE Fault_C1Dyn(Fault, Tfalla, If, IRMS, Vf)

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments
      REAL,    INTENT(IN)  :: Fault, Tfalla
      REAL,    INTENT(OUT) :: If(3), IRMS, Vf(3)

! Electrical Node Indices

! Control Signals
      INTEGER  IT_1
      REAL     Ifb, Ifc, RT_1(3), RT_2, Ifa, RT_3
      REAL     RT_4, BRf, Ea(3), RMS
      REAL     C1_In_TRT(3)

! Internal Variables
      LOGICAL  LVD1_1
      INTEGER  IVD1_1, IVD1_2, IVD1_3, IVD1_4

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOI, ISTOF, IT_0                  ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      TXFR(NTXFR,1) = NSTOL
      TXFR(NTXFR,2) = NSTOI
      TXFR(NTXFR,3) = NSTOF
      TXFR(NTXFR,4) = NSTOC

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      ISTOI     = NSTOI
      NSTOI     = NSTOI + 1
      ISTOF     = NSTOF
      NSTOF     = NSTOF + 26
      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 15
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      IT_1     = STOI(ISTOI + 1)
      Ifb      = STOF(ISTOF + 10)
      Ifc      = STOF(ISTOF + 11)
      RT_2     = STOF(ISTOF + 15)
      Ifa      = STOF(ISTOF + 16)
      RT_3     = STOF(ISTOF + 17)
      RT_4     = STOF(ISTOF + 18)
      BRf      = STOF(ISTOF + 19)
      RMS      = STOF(ISTOF + 23)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         RT_1(IT_0) = STOF(ISTOF + 11 + IT_0)
         Ea(IT_0) = STOF(ISTOF + 19 + IT_0)
         C1_In_TRT(IT_0) = STOF(ISTOF + 23 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


!---------------------------------------
! Configuration of Models
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Fault_C1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSD:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 90:[tfaultn] Timed Fault Logic 
! Timed fault logic
      IT_1 = 0
      IF ( TIME .GE. Tfalla ) IT_1 = 1
      IF ( TIME .GE. (Tfalla+1.5) ) IT_1 = 0

! 120:[time-sig] Output of Simulation Time 
      RT_3 = TIME

! 130:[range] Range Comparator 
!  Band_Compare
      IF (RT_3 .LT. -0.05) THEN
         RT_4 = 0.0
      ELSE IF (RT_3 .LE. 0.1) THEN
         RT_4 = 0.0
      ELSE
         RT_4 = 1.0
      ENDIF
!

! 140:[mult] Multiplier 
      BRf = RT_2 * RT_4

! 170:[tpflt] Three Phase Fault 
      CALL E3PHFLT1_EXE(SS, (IBRCH+1), (IBRCH+2), (IBRCH+3), (IBRCH+4), &
     &(IBRCH+5), (IBRCH+6),0,IT_1,NINT(Fault),10.0)
      LVD1_1 = (OPENBR( (IBRCH+1),SS).AND.OPENBR( (IBRCH+2),SS).AND.OPEN&
     &BR( (IBRCH+3),SS).AND.OPENBR( (IBRCH+4),SS).AND.OPENBR( (IBRCH+5),&
     &SS).AND.OPENBR( (IBRCH+6),SS))
      IVD1_1 = E_BtoI(LVD1_1)
      IF(FIRSTSTEP .OR. (IVD1_1 .NE. STORI(NSTORI))) THEN
         CALL PSCAD_AGI2(ICALL_NO,1556868335,1-IVD1_1,"AG1")
         STORI(NSTORI) = IVD1_1
      ENDIF
      NSTORI = NSTORI + 1

! 180:[breaker3] 3 Phase Breaker 'Brf'
      IVD1_4 = NSTORI
      NSTORI = NSTORI + 3
! Three Phase Breaker
      CALL EMTDC_BREAKER1(SS, (IBRCH+11),0.005,1.0e+12,RTCF(NRTCF),1,NIN&
     &T(1.0-BRf))
      CALL EMTDC_BREAKER1(SS, (IBRCH+12),0.005,1.0e+12,RTCF(NRTCF),1,NIN&
     &T(1.0-BRf))
      CALL EMTDC_BREAKER1(SS, (IBRCH+10),0.005,1.0e+12,RTCF(NRTCF),1,NIN&
     &T(1.0-BRf))
!
      IVD1_1 = 2*E_BtoI(OPENBR( (IBRCH+11),SS))
      IVD1_2 = 2*E_BtoI(OPENBR( (IBRCH+12),SS))
      IVD1_3 = 2*E_BtoI(OPENBR( (IBRCH+10),SS))
      NRTCF = NRTCF + 1
      IF (FIRSTSTEP .OR. (STORI(IVD1_4+0) .NE. IVD1_1)) THEN
         CALL PSCAD_AGI2(ICALL_NO,1465171265,IVD1_1,"BOpen1")
      ENDIF
      IF (FIRSTSTEP .OR. (STORI(IVD1_4+1) .NE. IVD1_2)) THEN
         CALL PSCAD_AGI2(ICALL_NO,1465171265,IVD1_2,"BOpen2")
      ENDIF
      IF (FIRSTSTEP .OR. (STORI(IVD1_4+2) .NE. IVD1_3)) THEN
         CALL PSCAD_AGI2(ICALL_NO,1465171265,IVD1_3,"BOpen3")
      ENDIF
      STORI(IVD1_4+0) = 2*E_BtoI(OPENBR( (IBRCH+11),SS))
      STORI(IVD1_4+1) = 2*E_BtoI(OPENBR( (IBRCH+12),SS))
      STORI(IVD1_4+2) = 2*E_BtoI(OPENBR( (IBRCH+10),SS))

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOF(ISTOF + 1) = Fault
      STOF(ISTOF + 2) = Tfalla
      STOI(ISTOI + 1) = IT_1
      STOF(ISTOF + 10) = Ifb
      STOF(ISTOF + 11) = Ifc
      STOF(ISTOF + 15) = RT_2
      STOF(ISTOF + 16) = Ifa
      STOF(ISTOF + 17) = RT_3
      STOF(ISTOF + 18) = RT_4
      STOF(ISTOF + 19) = BRf
      STOF(ISTOF + 23) = RMS

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 11 + IT_0) = RT_1(IT_0)
         STOF(ISTOF + 19 + IT_0) = Ea(IT_0)
         STOF(ISTOF + 23 + IT_0) = C1_In_TRT(IT_0)
      END DO


!---------------------------------------
! Transfer to Exports
!---------------------------------------
      IRMS     = RMS

! Array (1:3) quantities...
      DO IT_0 = 1,3
      If(IT_0) = RT_1(IT_0)
      Vf(IT_0) = Ea(IT_0)
      END DO

!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE Fault_C1Out()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 'emtstor.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's2.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'fnames.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'matlab.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------

      REAL    EMTDC_VVDC    ! 
      REAL    RMS3          ! 'Instantaneous RMS Measurement'
      REAL    VBRANCH       ! 

!---------------------------------------
! Variable Declarations
!---------------------------------------


! Electrical Node Indices
      INTEGER  p1(3)

! Control Signals
      REAL     Ifb, Ifc, RT_1(3), RT_2, Ifa
      REAL     Ea(3), RMS, C1_In_TRT(3)

! Internal Variables
      INTEGER  IVD1_1
      REAL     RVD1_1, RVD1_2

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER ISTOL, ISTOI, ISTOF, ISTOC, IT_0    ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------

! Dsdyn <-> Dsout transfer index storage

      NTXFR = NTXFR + 1

      ISTOL = TXFR(NTXFR,1)
      ISTOI = TXFR(NTXFR,2)
      ISTOF = TXFR(NTXFR,3)
      ISTOC = TXFR(NTXFR,4)

! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 15
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Transfers from storage arrays
!---------------------------------------

      Ifb      = STOF(ISTOF + 10)
      Ifc      = STOF(ISTOF + 11)
      RT_2     = STOF(ISTOF + 15)
      Ifa      = STOF(ISTOF + 16)
      RMS      = STOF(ISTOF + 23)

! Array (1:3) quantities...
      DO IT_0 = 1,3
         RT_1(IT_0) = STOF(ISTOF + 11 + IT_0)
         Ea(IT_0) = STOF(ISTOF + 19 + IT_0)
         C1_In_TRT(IT_0) = STOF(ISTOF + 23 + IT_0)
      END DO


!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         p1(IT_0) = NODE(INODE + 0 + IT_0)
      END DO

!---------------------------------------
! Configuration of Models
!---------------------------------------

      IF ( TIMEZERO ) THEN
         FILENAME = 'Fault_C1.dta'
         CALL EMTDC_OPENFILE
         SECTION = 'DATADSO:'
         CALL EMTDC_GOTOSECTION
      ENDIF
!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 10:[voltmetergnd] Voltmeter (Line - Ground) 'Ea'
      Ea(1) = EMTDC_VVDC(SS, p1(1), 0)
      Ea(2) = EMTDC_VVDC(SS, p1(2), 0)
      Ea(3) = EMTDC_VVDC(SS, p1(3), 0)

! 20:[ammeter] Current Meter 'Ifc'
      Ifc = ( CBR((IBRCH+9), SS))

! 30:[ammeter] Current Meter 'Ifb'
      Ifb = ( CBR((IBRCH+8), SS))

! 40:[ammeter] Current Meter 'Ifa'
      Ifa = ( CBR((IBRCH+7), SS))

! 70:[datamerge] Merges data signals into an array 
      RT_1(1) = Ifa
      RT_1(2) = Ifb
      RT_1(3) = Ifc

! 100:[rms-inst] Single Phase RMS Meter 
      RMS = RMS3( Ifa , 0.016 )

! 110:[range] Range Comparator 
!  Band_Compare
      IF (RMS .LT. -0.05) THEN
         RT_2 = 0.0
      ELSE IF (RMS .LE. 0.05) THEN
         RT_2 = 1.0
      ELSE
         RT_2 = 0.0
      ENDIF
!

! 170:[tpflt] Three Phase Fault 
!
! Multi-phase Fault Currents
!
!

! 180:[breaker3] 3 Phase Breaker 'Brf'
! Three Phase Breaker Currents
      C1_In_TRT(1) = VBRANCH(SS, (IBRCH+11))
      C1_In_TRT(2) = VBRANCH(SS, (IBRCH+12))
      C1_In_TRT(3) = VBRANCH(SS, (IBRCH+10))
      CALL BRK_POWER(SS, (IBRCH+11), (IBRCH+12), (IBRCH+10),0,0,0,IVD1_1&
     &,0.02,RVD1_1,RVD1_2)

!---------------------------------------
! Feedbacks and transfers to storage
!---------------------------------------

      STOF(ISTOF + 10) = Ifb
      STOF(ISTOF + 11) = Ifc
      STOF(ISTOF + 15) = RT_2
      STOF(ISTOF + 16) = Ifa
      STOF(ISTOF + 23) = RMS

! Array (1:3) quantities...
      DO IT_0 = 1,3
         STOF(ISTOF + 11 + IT_0) = RT_1(IT_0)
         STOF(ISTOF + 19 + IT_0) = Ea(IT_0)
         STOF(ISTOF + 23 + IT_0) = C1_In_TRT(IT_0)
      END DO


!---------------------------------------
! Close Model Data read
!---------------------------------------

      IF ( TIMEZERO ) CALL EMTDC_CLOSEFILE
      RETURN
      END

!=======================================================================

      SUBROUTINE Fault_C1Dyn_Begin()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 15
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 120:[time-sig] Output of Simulation Time 

! 130:[range] Range Comparator 

! 140:[mult] Multiplier 

! 170:[tpflt] Three Phase Fault 
      CALL E3PHFLT1_CFG(1.0e+15,0.05)

! 180:[breaker3] 3 Phase Breaker 'Brf'
      CALL COMPONENT_ID(ICALL_NO,1465171265)
      RTCF(NRTCF) = ABS(0.0)
      NRTCF = NRTCF + 1

      RETURN
      END

!=======================================================================

      SUBROUTINE Fault_C1Out_Begin()

!---------------------------------------
! Standard includes
!---------------------------------------

      INCLUDE 'nd.h'
      INCLUDE 'emtconst.h'
      INCLUDE 's0.h'
      INCLUDE 's1.h'
      INCLUDE 's4.h'
      INCLUDE 'branches.h'
      INCLUDE 'pscadv3.h'
      INCLUDE 'radiolinks.h'
      INCLUDE 'rtconfig.h'

!---------------------------------------
! Function/Subroutine Declarations
!---------------------------------------


!---------------------------------------
! Variable Declarations
!---------------------------------------


! Subroutine Arguments

! Electrical Node Indices
      INTEGER  p1(3)

! Control Signals

! Internal Variables

! Indexing variables
      INTEGER ICALL_NO                            ! Module call num
      INTEGER IT_0                                ! Storage Indices
      INTEGER SS, INODE, IBRCH                    ! SS/Node/Branch/Xfmr


!---------------------------------------
! Local Indices
!---------------------------------------


! Define electric network subsystem number

      SS        = NODE(NNODE+1)

! Increment and assign runtime configuration call indices

      ICALL_NO  = NCALL_NO
      NCALL_NO  = NCALL_NO + 1

! Increment global storage indices

      INODE     = NNODE + 2
      NNODE     = NNODE + 14
      IBRCH     = NBRCH(SS)
      NBRCH(SS) = NBRCH(SS) + 15
      NCSCS     = NCSCS + 0
      NCSCR     = NCSCR + 0

!---------------------------------------
! Electrical Node Lookup
!---------------------------------------


! Array (1:3) quantities...
      DO IT_0 = 1,3
         p1(IT_0) = NODE(INODE + 0 + IT_0)
      END DO

!---------------------------------------
! Generated code from module definition
!---------------------------------------


! 70:[datamerge] Merges data signals into an array 

! 100:[rms-inst] Single Phase RMS Meter 

! 110:[range] Range Comparator 

      RETURN
      END

